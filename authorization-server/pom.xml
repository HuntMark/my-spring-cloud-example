<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>my-spring-cloud-example</artifactId>
        <groupId>com.example</groupId>
        <version>1.0-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>authorization-server</artifactId>

    <properties>

        <!--
            Application Configuration Properties.
            These properties replace appropriate placeholders of resource files.
            Also their values can be overrode by command-line arguments, for example:
            mvn clean install -DapplicationServerPort=8080
        -->

        <applicationName>${artifactId}</applicationName>
        <applicationServerPort>9999</applicationServerPort>

        <eurekaHost>localhost</eurekaHost>
        <eurekaPort>8761</eurekaPort>

        <securityKeystoreAlias>mytest</securityKeystoreAlias>
        <securityKeystoreFilename>mytest.jks</securityKeystoreFilename>
        <securityKeystorePassphrase>mypass</securityKeystorePassphrase>

        <oauth2ClientId>clientExample</oauth2ClientId>
        <oauth2ClientSecret>clientSecret</oauth2ClientSecret>
        <oauth2Scope>message-service</oauth2Scope>

    </properties>

    <!-- Dependencies Section -->

    <dependencies>

        <!-- Spring Boot -->

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
        </dependency>

        <!-- Spring Cloud -->

        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-eureka</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-oauth2</artifactId>
        </dependency>

        <!-- Utils -->

        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
        </dependency>

        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
        </dependency>

        <!-- Testing -->

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>com.jayway.restassured</groupId>
            <artifactId>rest-assured</artifactId>
            <exclusions>
                <exclusion>
                    <artifactId>commons-logging</artifactId>
                    <groupId>commons-logging</groupId>
                </exclusion>
            </exclusions>
            <scope>test</scope>
        </dependency>

    </dependencies>

    <!-- Build -->

    <build>

        <!--
            Replace placeholders of resource files by Maven properties.
            More information: https://maven.apache.org/pom.html#Resources
        -->
        <resources>

            <!-- copy all resource files with filtering except *.jks to avoid corrupting them -->
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
                <excludes>
                    <exclude>*.jks</exclude>
                </excludes>
            </resource>

            <!-- copy only *.jks files without filtering -->
            <resource>
                <directory>src/main/resources</directory>
                <filtering>false</filtering>
                <includes>
                    <include>*.jks</include>
                </includes>
            </resource>

        </resources>

        <!-- Plugins Section -->

        <plugins>

            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>

        </plugins>

    </build>

</project>